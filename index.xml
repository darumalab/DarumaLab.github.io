<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ベイカー・ストリート</title>
    <link>https://darumalab.github.io/</link>
    <description>Recent content on ベイカー・ストリート</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy;2016 Takanori Saito</copyright>
    <lastBuildDate>Sun, 29 Apr 2018 22:00:45 +0900</lastBuildDate>
    
	<atom:link href="https://darumalab.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing about Alopecia Universalis</title>
      <link>https://darumalab.github.io/blog/alopecia-universalis/</link>
      <pubDate>Sun, 29 Apr 2018 22:00:45 +0900</pubDate>
      
      <guid>https://darumalab.github.io/blog/alopecia-universalis/</guid>
      <description>April 29, 2018 During my college years, I submit a short essay for This I Believe, National Public Radio program, with help from my sister and my teacher, Vanessa Conte. While it was not chosen to be on the program, I always wanted to share with someone my experience with Alopecia and how I had reconciled with it.
In the beginning, writing was a painful process. As I wrote this essay, I found that I was hiding a lot of my feelings towards Alopecia.</description>
    </item>
    
    <item>
      <title>Books 2017-2018</title>
      <link>https://darumalab.github.io/blog/books/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/blog/books/</guid>
      <description>The books I enjoyed reading in 2017 and 2018. I found most of them from my father’s book shelf.
2018/04/04 Sam Walton: Made In America Sam Walton John Huey
2018/02/28 The Intelligent Investor Rev Ed.(Collins Business Essentials) Benjamin Graham
2017/11/06 From Poverty to Power: By James Allen
2017/10/28 アルケミスト―夢を旅した少年 パウロ コエーリョ 山川紘矢 (The Alchemist by Paul Coelho)
2017/10/04 Built to Last: Successful Habits of Visionary Companies Jim Collins Jerry I. Porras</description>
    </item>
    
    <item>
      <title>R言語 NA 欠損値 - R Missing Data</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-na/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-na/</guid>
      <description>ベクトル x &amp;lt;- NA num &amp;lt;- c(1, 2, 3, NA) str &amp;lt;- c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, NA, &amp;quot;bee&amp;quot;) logi &amp;lt;- c(TRUE, NA, FALSE, TRUE)  データのタイプ mode(num) ## [1] &amp;quot;numeric&amp;quot; mode(str) ## [1] &amp;quot;character&amp;quot; mode(logi) ## [1] &amp;quot;logical&amp;quot;  NA(欠損値)の検出 is.na(num) #または!is.na(num) ## [1] FALSE FALSE FALSE TRUE is.na(str) ## [1] FALSE FALSE TRUE FALSE is.na(logi) ## [1] FALSE TRUE FALSE FALSE  NAのインデックス: which(is.na(num)) #which()でTRUEのインデックスを検出 ## [1] 4 which(is.na(str)) ## [1] 3 which(is.</description>
    </item>
    
    <item>
      <title>R言語 データフレーム - R Data Frame</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-dataframe/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-dataframe/</guid>
      <description>参考:
 データフレーム Tips 大全 1  和訳:
 observation, observed value:　観測値
 variable:　変数  ベクトル a &amp;lt;- 1:10 b &amp;lt;- c(&amp;quot;たま&amp;quot;, &amp;quot;しろ&amp;quot;, &amp;quot;くろ&amp;quot;, &amp;quot;みけ&amp;quot;, &amp;quot;ぶち&amp;quot;, &amp;quot;ぽち&amp;quot;, &amp;quot;ころ&amp;quot;, NA, &amp;quot;じろ&amp;quot;, &amp;quot;わん&amp;quot;) c &amp;lt;- c(&amp;quot;猫&amp;quot;, &amp;quot;猫&amp;quot;, &amp;quot;猫&amp;quot;, &amp;quot;猫&amp;quot;, &amp;quot;猫&amp;quot;, &amp;quot;犬&amp;quot;, &amp;quot;犬&amp;quot;, &amp;quot;犬&amp;quot;, &amp;quot;犬&amp;quot;, &amp;quot;犬&amp;quot;) d &amp;lt;- rep(c(&amp;quot;♂&amp;quot;, &amp;quot;♀&amp;quot;), times = 5)  データフレーム dat &amp;lt;- data.frame(a, b) dat &amp;lt;- data.frame(年齢 = a, 名前 = b) dat &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>R言語 ベクトル - R Vectors</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-vectors/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-vectors/</guid>
      <description>参考:
 ベクトルに関する Tips 大全 1  ベクトルの作成 a &amp;lt;- c(1, 2, 3, 4, 5) a ## [1] 1 2 3 4 5 b &amp;lt;- c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;bee&amp;quot;) b ## [1] &amp;quot;dog&amp;quot; &amp;quot;cat&amp;quot; &amp;quot;bee&amp;quot; c &amp;lt;- c(TRUE, FALSE, TRUE) c ## [1] TRUE FALSE TRUE x &amp;lt;- 1:5 x ## [1] 1 2 3 4 5 y &amp;lt;- 5:1 y ## [1] 5 4 3 2 1 z &amp;lt;- -5:5 z ## [1] -5 -4 -3 -2 -1 0 1 2 3 4 5  seq() - sequence: 数列 seq(from = 1, to = 5, by = 1) ## [1] 1 2 3 4 5 seq(from = 1, to = 5, by = 0.</description>
    </item>
    
    <item>
      <title>R言語 リスト - R Lists</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-lists/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-lists/</guid>
      <description>リストの作成 MyList &amp;lt;- list(1:5, c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;bee&amp;quot;), c(TRUE, FALSE)) MyList ## [[1]] ## [1] 1 2 3 4 5 ## ## [[2]] ## [1] &amp;quot;dog&amp;quot; &amp;quot;cat&amp;quot; &amp;quot;bee&amp;quot; ## ## [[3]] ## [1] TRUE FALSE str(MyList) ## List of 3 ## $ : int [1:5] 1 2 3 4 5 ## $ : chr [1:3] &amp;quot;dog&amp;quot; &amp;quot;cat&amp;quot; &amp;quot;bee&amp;quot; ## $ : logi [1:2] TRUE FALSE a &amp;lt;- 1:3 b &amp;lt;- c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, NA) c &amp;lt;- c(TRUE, TRUE, FALSE) d &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>R言語 行列 - R Matrices</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-matrices/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-matrices/</guid>
      <description>参考:
 行列に関するる Tips 大全 1  和訳:
 matrix: 行列
 row: 行
 column: 列  行列 m1 &amp;lt;- matrix(1:10, nrow = 2) m1 ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 3 5 7 9 ## [2,] 2 4 6 8 10  チェック length(m1) #行列の要素の数を調べる ## [1] 10 nrow(m1) #行 ## [1] 2 ncol(m1) #列 ## [1] 5 dim(m1) #nxm ## [1] 2 5 m2 &amp;lt;- matrix(1:10, nrow = 2, byrow = TRUE) m2 ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 2 3 4 5 ## [2,] 6 7 8 9 10 m3 &amp;lt;- matrix(1:12, nrow = 3, ncol = 4, byrow = TRUE) m3 ## [,1] [,2] [,3] [,4] ## [1,] 1 2 3 4 ## [2,] 5 6 7 8 ## [3,] 9 10 11 12 m4 &amp;lt;- matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2, byrow = TRUE) m4 ## [,1] [,2] ## [1,] 1 0 ## [2,] 0 1  索引: オブジェクト名[row,column] m3 ## [,1] [,2] [,3] [,4] ## [1,] 1 2 3 4 ## [2,] 5 6 7 8 ## [3,] 9 10 11 12 m3[2, 3] ## [1] 7 m3[3, ] ## [1] 9 10 11 12 m3[, 3] ## [1] 3 7 11 m3[2:3, ] ## [,1] [,2] [,3] [,4] ## [1,] 5 6 7 8 ## [2,] 9 10 11 12 m3[, 2:3] ## [,1] [,2] ## [1,] 2 3 ## [2,] 6 7 ## [3,] 10 11 m3[, c(2, 4)] ## [,1] [,2] ## [1,] 2 4 ## [2,] 6 8 ## [3,] 10 12 m3[c(1, 2), c(3, 4)] ## [,1] [,2] ## [1,] 3 4 ## [2,] 7 8  値を上書き m3 ## [,1] [,2] [,3] [,4] ## [1,] 1 2 3 4 ## [2,] 5 6 7 8 ## [3,] 9 10 11 12 m3[3, 4] &amp;lt;- 0 m3 ## [,1] [,2] [,3] [,4] ## [1,] 1 2 3 4 ## [2,] 5 6 7 8 ## [3,] 9 10 11 0  名称を付ける m5 &amp;lt;- matrix(1:4, nrow = 2, ncol = 2, byrow = TRUE) m5 ## [,1] [,2] ## [1,] 1 2 ## [2,] 3 4 rownames(m5) &amp;lt;- c(&amp;quot;1st&amp;quot;, &amp;quot;2nd&amp;quot;) colnames(m5) &amp;lt;- c(&amp;quot;first&amp;quot;, &amp;quot;second&amp;quot;) m5 ## first second ## 1st 1 2 ## 2nd 3 4 rownames(m5) &amp;lt;- letters[1:2] #a,b,c,.</description>
    </item>
    
    <item>
      <title>Rプログラミングの学習</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-16-tutorials/</link>
      <pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-16-tutorials/</guid>
      <description>R言語の広まり R言語は、研究や業務に使う大量データにまつわる統計的な疑問を検証するために使われているプログラミング言語です。スクリプト - 簡易的なプログラム - によってデータの分析を組み立てて行くことができます。したがって、同じデータとスクリプトを使えば、あらゆる人がデータの分析結果を繰り返し再現することができます。アメリカでは、行政や企業など、幅広いセクターで統計分析を共有するフレームワークとして活用され始めています。
R言語には、オープンなコミュニティやリソースが存在しています。R Bloggerでは、R言語のユーザーが投稿する最新のブログエントリーを見ることができます。R言語の新しい拡張機能やサービスの動向はここで確認できます。The R Journalでは、R言語と統計学に関する学術論文が提供されています。 Stack Overflowでは、プログラミング技術に関する情報が共有されています。R言語で発生するエラーに対処する際に、とても頼りになるコミュニティです。
 R言語の学習について R言語を本格的に学びたい方には、Data CampとR for everyoneをお勧めしています。
Data Campでは、データサイエンスの有料のオンラインコースが多数用意されています。R言語とPythonを使った数ある学習コースの中で特に実践的で楽しく勉強できると思います。www.datacamp.com
Jared Lander さんの“R for everyone”という本では、R言語を基礎から分かりやすく教えています。www.jaredlander.com/r-for-everyone/
 チュートリアルについて R言語について、英語のリソースから学習したことを日本語で解説してみたくてこのチュートリアルを作り始めました。テーマを絞った学習カリキュラムの制作など、お気軽にこちらでご相談ください。

 Part 2: R言語 RStudio
RStudioについて   Part 3: R言語 オブジェクト - R Objects
オブジェクトの基本的な扱い方   Part 4: R言語 データのタイプ - R Data Types
Rでよく使われるデータのタイプ   Part 5: R言語 ベクトルの扱い方 - R Vectors
ベクトルの作成と基本的な操作について   Part 6: R言語 NA 欠損値 - R Missing Data</description>
    </item>
    
    <item>
      <title>R言語 データの読み込み- R Importing Data</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-14-import/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-14-import/</guid>
      <description>データの読み込み    CSVファルの読み込み dat1 &amp;lt;- read.table(file = file.choose(), header = TRUE, sep = &amp;quot;,&amp;quot;)  タブ区切りファイルの読み込み dat2 &amp;lt;- read.table(file = file.choose(), header = TRUE, sep = &amp;quot;\t&amp;quot;)  URLからデータを読み込み datPath &amp;lt;- &amp;quot;&amp;quot; dat3 &amp;lt;- read.table(file = datPath, header = TRUE, sep = &amp;quot;,&amp;quot;)  日本語のファイルを読み込む時にエラーが発生する場合 dat1 &amp;lt;- read.table(file = file.choose(), header = TRUE, sep = &amp;quot;,&amp;quot;, fileEncoding = &amp;quot;CP932&amp;quot;)  CSVファイルの書き出し datPath &amp;lt;- &amp;quot;&amp;quot; write.csv(dat1, file = datPath, row.</description>
    </item>
    
    <item>
      <title>R言語 RStudioの紹介</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-13-rstudio/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-13-rstudio/</guid>
      <description>RStudioはR言語のオープンソース1のIDE（統合開発環境）のことで、R言語を使ったプログラミングに欠かせないソフトウェアです。RStudioを使うことで、データの収集と管理、分析、結果の抽出まで、自分の都合に合わせて効率的にデータの情報を引き出すインフラストラクチャーを構築しやすくなります。
RStudioを使うメリット プログラミングに使うコード、データ、データ分析の結果をプロジェクトごとに管理できる データ分析をアシストする多彩な機能が用意されている。例えばプロットのウィンドでは、チャートやグラフのサイズを手軽に調整したり、ファイル形式を指定して保存することができる。その他にもデータの読み込み、バージョンコントロールのアシスタント機能などがある プログラムを記述する時に、自動補完機能を使って事前に入力したコードから自動的にミスを修正したり入力を省略することができる。コードスニペットを使うとコードを簡単に挿入できる 作業の結果は、R Markdownを使ってドキュメントにまとめられる。ドキュメントはRPubsで共有できる   RStudioの導入 R言語のダウンロード:
- R for Windows
- R for Mac
RStudioのダウンロード:
- RStudio: Choose Your Version of RStudio
 RStudio エディター  RStudioを起動した直後のインターフェイスです。エディターのウィンドウでプログラムの記述、編集を行います。メニューのTools → New File → R Scriptから新しいエディターを開きます。記述したプログラムをハイライトして、Runのボタン、またはキーボードでCommand + Enterを入力するとプログラムを実行できます。その他のキーボードのショートカットは、メニューのTools → Keyboard Shortcuts Helpで確認します。  RStudio コンソール  コンソールは、エディターで記述したプログラムを実行するウィンドウです。コンソールに直接プログラムを入力することもできます。  RStudio ワーキングスペース  ワーキングスペースは、読み込んだデータや作成したオブジェクトを保存するウィンドウです。データ/オブジェクトの属性が表示されます。Historyのパネルでは過去に実行したコマンドが表示されます。  RStudio ファイル、プロット、ヘルプ、ビューワー  Filesのパネルからワーキングディレクトリにあるフォルダー/ファイルを管理します。Plotsのパネルで作成したチャートを確認/保存します。PackagesのパネルからRのパッケージ（拡張機能）をインストール/アンインストールできます。HelpのパネルからR言語のヘルプドキュメントを呼び出せます。Viewerでローカルのウェブコンテンツを表示します。   開発コードはGithubで公開されています↩
   </description>
    </item>
    
    <item>
      <title>R言語 オブジェクト - R Objects</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-13-objects/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-13-objects/</guid>
      <description>オブジェクトとは    オブジェクトの作成 x &amp;lt;- 2 + 2 x ## [1] 4 y &amp;lt;- 5 * 5 y ## [1] 25 myname &amp;lt;- &amp;quot;Joe&amp;quot; myname ## [1] &amp;quot;Joe&amp;quot;  作成したオブジェクト名を確認 objects() ## [1] &amp;quot;myname&amp;quot; &amp;quot;x&amp;quot; &amp;quot;y&amp;quot; ls() ## [1] &amp;quot;myname&amp;quot; &amp;quot;x&amp;quot; &amp;quot;y&amp;quot;  ワーキングディレクトリ getwd() #確認 setwd(&amp;quot;ディレクトリ名&amp;quot;) #変更  オブジェクトの保存 save(x, y, myname, file = &amp;quot;ファイル名.RData&amp;quot;) #x,y,mynameを保存  オブジェクトの読み込み load(&amp;quot;ファイル名.RData&amp;quot;)  オブジェクトの削除 rm(x) #xを削除 rm(x, y) #x,y,mynameを削除 rm(list = objects()) #全て削除  </description>
    </item>
    
    <item>
      <title>R言語 データのタイプ- R Data Types</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17-type/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17-type/</guid>
      <description>数値データ num &amp;lt;- 7  オブジェクトが数値データなのかチェック is.numeric(num) ## [1] TRUE class(num) ## [1] &amp;quot;numeric&amp;quot;  オブジェクトが整数なのかチェック is.integer(num) ## [1] FALSE num2 &amp;lt;- 7L is.integer(num2) ## [1] TRUE  文字列データ char &amp;lt;- &amp;quot;テキスト&amp;quot; char2 &amp;lt;- factor(&amp;quot;テキスト&amp;quot;) #文字列をファクターとして保存  オブジェクトが文字列データなのかチェック is.character(char) ## [1] TRUE class(char) ## [1] &amp;quot;character&amp;quot;  論理データ logi &amp;lt;- TRUE logi2 &amp;lt;- FALSE logi3 &amp;lt;- NA  オブジェクトが論理データなのかチェック is.logical(logi) ## [1] TRUE  日付データ date &amp;lt;- as.Date(&amp;quot;YYYY-MM-DD&amp;quot;) #例:2017-04-15 date2 &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>R言語 ベクトル - R Vectors</title>
      <link>https://darumalab.github.io/bootcamp/2017-07-17vectors/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/bootcamp/2017-07-17vectors/</guid>
      <description>オブジェクトとは   参考
ベクトルに関する Tips 大全
http://www.okadajp.org/RWiki/?%E3%83%99%E3%82%AF%E3%83%88%E3%83%ABTips%E5%A4%A7%E5%85%A8
 ベクトルの作成 a &amp;lt;- c(1, 2, 3, 4, 5) a ## [1] 1 2 3 4 5 b &amp;lt;- c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;bee&amp;quot;) b ## [1] &amp;quot;dog&amp;quot; &amp;quot;cat&amp;quot; &amp;quot;bee&amp;quot; c &amp;lt;- c(TRUE, FALSE, TRUE) c ## [1] TRUE FALSE TRUE x &amp;lt;- 1:5 x ## [1] 1 2 3 4 5 y &amp;lt;- 5:1 y ## [1] 5 4 3 2 1 z &amp;lt;- -5:5 z ## [1] -5 -4 -3 -2 -1 0 1 2 3 4 5  seq() - sequence: 数列 `?</description>
    </item>
    
    <item>
      <title>線形目盛と対数目盛 - Linear Scale and Logarithmic Scale</title>
      <link>https://darumalab.github.io/blog/logarithmic_scale/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://darumalab.github.io/blog/logarithmic_scale/</guid>
      <description>This is a post written in RMarkdown (*.Rmd) to understand reasons to use logarithmic scales in charts. この記事ではチャートやグラフに対数目盛りを使う目的についてまとめています。Naomi Robbins1さん、Gregory Kanevsky2さん、Hunkar Ozyasar 3さんの記事を参考にしています。
キーポイント 線形目盛と対数目盛りの違い：
 線形目盛（Linear Scale） : 等間隔の幅が一定の量の変化を表している。 対数目盛（Logarithmic Scale） : 等間隔の幅が量の変化率を表している。  対数目盛（Logarithmic Scale）を使うケース4：
データが狭い範囲に密集していない時に使う。極端な外れ値があるデータ、広い範囲の値を持をロングテール型のデータをきれいに可視化できる。 対数目盛は量の変化率を示しているので、指数関数的増加や指数関数的減衰が見られるデータの可視化に適している。    金貨のチャート 1885年の秋のある日、アーサー・ドイルは株式仲買店員の友人に稼ぎの一部を預けることにした。大学卒業後、開業した診療所の仕事がやっと軌道に乗りはじめていた。経済的に困っていたわけではなく、資金繰りが苦しい友人を助けるつもりだった。預けたソブリン金貨には複利の利子がつく。「金貨は必ず毎年0.5倍ずつ増えていく」
 R言語: 線形目盛 time &amp;lt;- 1:10 # 貯蓄期間 r &amp;lt;- 0.5 # 成長率 a &amp;lt;- 10 # 預けた金貨 y &amp;lt;- a * (1 + r)^time # 指数関数的な成長, (1+r) is the growth factor plt &amp;lt;- qplot(seq_along(y), y, xlab = &amp;quot;年数&amp;quot;, ylab = &amp;quot;金貨&amp;quot;) plt + scale_y_continuous(breaks = seq(0, 1000, by = 100)) + scale_x_continuous(breaks = seq(0, 10, by = 1)) チャート1:金貨と預入期間</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://darumalab.github.io/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>https://darumalab.github.io/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
  </channel>
</rss>